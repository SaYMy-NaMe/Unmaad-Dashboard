{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { getEndpointConfig, processBotResponse } from '../utils/helpers';\nconst useChat = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState('satirical-bot');\n  const [message, setMessage] = useState('');\n  const [chatHistories, setChatHistories] = useState({\n    'satirical-bot': [],\n    'satirical-bot-1': [],\n    'lambda': []\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Get current tab's chat history\n  const chatHistory = chatHistories[activeTab] || [];\n  const handleSubmit = async e => {\n    if (e) e.preventDefault();\n    if (!message.trim()) return;\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: message,\n      timestamp: new Date().toLocaleTimeString()\n    };\n\n    // Update chat history for the current tab\n    setChatHistories(prev => ({\n      ...prev,\n      [activeTab]: [...(prev[activeTab] || []), userMessage]\n    }));\n    setLoading(true);\n    setError(null);\n    try {\n      const config = getEndpointConfig(activeTab, message);\n      const result = await axios(config);\n      const botResponse = processBotResponse(result, message);\n      const botMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        content: botResponse,\n        timestamp: new Date().toLocaleTimeString(),\n        endpoint: activeTab\n      };\n\n      // Update chat history for the current tab\n      setChatHistories(prev => ({\n        ...prev,\n        [activeTab]: [...(prev[activeTab] || []), botMessage]\n      }));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'error',\n        content: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message || 'Something went wrong',\n        timestamp: new Date().toLocaleTimeString()\n      };\n\n      // Update chat history for the current tab\n      setChatHistories(prev => ({\n        ...prev,\n        [activeTab]: [...(prev[activeTab] || []), errorMessage]\n      }));\n    } finally {\n      setLoading(false);\n      setMessage('');\n    }\n  };\n  const clearChat = () => {\n    // Clear chat history for the current tab only\n    setChatHistories(prev => ({\n      ...prev,\n      [activeTab]: []\n    }));\n    setError(null);\n  };\n  return {\n    activeTab,\n    setActiveTab,\n    message,\n    setMessage,\n    chatHistory,\n    loading,\n    error,\n    handleSubmit,\n    clearChat\n  };\n};\n_s(useChat, \"gh2e14c8dc6CGrPCeEqZiCkIaEs=\");\nexport default useChat;","map":{"version":3,"names":["useState","axios","getEndpointConfig","processBotResponse","useChat","_s","activeTab","setActiveTab","message","setMessage","chatHistories","setChatHistories","loading","setLoading","error","setError","chatHistory","handleSubmit","e","preventDefault","trim","userMessage","id","Date","now","type","content","timestamp","toLocaleTimeString","prev","config","result","botResponse","botMessage","endpoint","err","_err$response","_err$response$data","errorMessage","response","data","clearChat"],"sources":["/Users/ashraf/Desktop/Unmaad/client/src/hooks/useChat.js"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport { getEndpointConfig, processBotResponse } from '../utils/helpers';\n\nconst useChat = () => {\n  const [activeTab, setActiveTab] = useState('satirical-bot');\n  const [message, setMessage] = useState('');\n  const [chatHistories, setChatHistories] = useState({\n    'satirical-bot': [],\n    'satirical-bot-1': [],\n    'lambda': []\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Get current tab's chat history\n  const chatHistory = chatHistories[activeTab] || [];\n\n  const handleSubmit = async (e) => {\n    if (e) e.preventDefault();\n    if (!message.trim()) return;\n\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: message,\n      timestamp: new Date().toLocaleTimeString()\n    };\n\n    // Update chat history for the current tab\n    setChatHistories(prev => ({\n      ...prev,\n      [activeTab]: [...(prev[activeTab] || []), userMessage]\n    }));\n    setLoading(true);\n    setError(null);\n\n    try {\n      const config = getEndpointConfig(activeTab, message);\n      const result = await axios(config);\n      const botResponse = processBotResponse(result, message);\n      const botMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        content: botResponse,\n        timestamp: new Date().toLocaleTimeString(),\n        endpoint: activeTab\n      };\n      \n      // Update chat history for the current tab\n      setChatHistories(prev => ({\n        ...prev,\n        [activeTab]: [...(prev[activeTab] || []), botMessage]\n      }));\n    } catch (err) {\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'error',\n        content: err.response?.data?.error || err.message || 'Something went wrong',\n        timestamp: new Date().toLocaleTimeString()\n      };\n      \n      // Update chat history for the current tab\n      setChatHistories(prev => ({\n        ...prev,\n        [activeTab]: [...(prev[activeTab] || []), errorMessage]\n      }));\n    } finally {\n      setLoading(false);\n      setMessage('');\n    }\n  };\n\n  const clearChat = () => {\n    // Clear chat history for the current tab only\n    setChatHistories(prev => ({\n      ...prev,\n      [activeTab]: []\n    }));\n    setError(null);\n  };\n\n  return {\n    activeTab,\n    setActiveTab,\n    message,\n    setMessage,\n    chatHistory,\n    loading,\n    error,\n    handleSubmit,\n    clearChat\n  };\n};\n\nexport default useChat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}