{"ast":null,"code":"import{useState}from'react';import axios from'axios';import{getEndpointConfig,processBotResponse}from'../utils/helpers';const useChat=()=>{const[activeTab,setActiveTab]=useState('satirical-bot');const[message,setMessage]=useState('');const[chatHistories,setChatHistories]=useState({'satirical-bot':[],'satirical-bot-1':[],'lambda':[]});const[loading,setLoading]=useState(false);const[error,setError]=useState(null);// Get current tab's chat history\nconst chatHistory=chatHistories[activeTab]||[];const handleSubmit=async e=>{if(e)e.preventDefault();if(!message.trim())return;const userMessage={id:Date.now(),type:'user',content:message,timestamp:new Date().toLocaleTimeString()};// Update chat history for the current tab\nsetChatHistories(prev=>({...prev,[activeTab]:[...(prev[activeTab]||[]),userMessage]}));setLoading(true);setError(null);try{const config=getEndpointConfig(activeTab,message);const result=await axios(config);const botResponse=processBotResponse(result,message);const botMessage={id:Date.now()+1,type:'bot',content:botResponse,timestamp:new Date().toLocaleTimeString(),endpoint:activeTab};// Update chat history for the current tab\nsetChatHistories(prev=>({...prev,[activeTab]:[...(prev[activeTab]||[]),botMessage]}));}catch(err){var _err$response,_err$response$data;const errorMessage={id:Date.now()+1,type:'error',content:((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||err.message||'Something went wrong',timestamp:new Date().toLocaleTimeString()};// Update chat history for the current tab\nsetChatHistories(prev=>({...prev,[activeTab]:[...(prev[activeTab]||[]),errorMessage]}));}finally{setLoading(false);setMessage('');}};const clearChat=()=>{// Clear chat history for the current tab only\nsetChatHistories(prev=>({...prev,[activeTab]:[]}));setError(null);};return{activeTab,setActiveTab,message,setMessage,chatHistory,loading,error,handleSubmit,clearChat};};export default useChat;","map":{"version":3,"names":["useState","axios","getEndpointConfig","processBotResponse","useChat","activeTab","setActiveTab","message","setMessage","chatHistories","setChatHistories","loading","setLoading","error","setError","chatHistory","handleSubmit","e","preventDefault","trim","userMessage","id","Date","now","type","content","timestamp","toLocaleTimeString","prev","config","result","botResponse","botMessage","endpoint","err","_err$response","_err$response$data","errorMessage","response","data","clearChat"],"sources":["/Users/ashraf/Desktop/Unmaad/client/src/hooks/useChat.js"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport { getEndpointConfig, processBotResponse } from '../utils/helpers';\n\nconst useChat = () => {\n  const [activeTab, setActiveTab] = useState('satirical-bot');\n  const [message, setMessage] = useState('');\n  const [chatHistories, setChatHistories] = useState({\n    'satirical-bot': [],\n    'satirical-bot-1': [],\n    'lambda': []\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Get current tab's chat history\n  const chatHistory = chatHistories[activeTab] || [];\n\n  const handleSubmit = async (e) => {\n    if (e) e.preventDefault();\n    if (!message.trim()) return;\n\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: message,\n      timestamp: new Date().toLocaleTimeString()\n    };\n\n    // Update chat history for the current tab\n    setChatHistories(prev => ({\n      ...prev,\n      [activeTab]: [...(prev[activeTab] || []), userMessage]\n    }));\n    setLoading(true);\n    setError(null);\n\n    try {\n      const config = getEndpointConfig(activeTab, message);\n      const result = await axios(config);\n      const botResponse = processBotResponse(result, message);\n      const botMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        content: botResponse,\n        timestamp: new Date().toLocaleTimeString(),\n        endpoint: activeTab\n      };\n      \n      // Update chat history for the current tab\n      setChatHistories(prev => ({\n        ...prev,\n        [activeTab]: [...(prev[activeTab] || []), botMessage]\n      }));\n    } catch (err) {\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'error',\n        content: err.response?.data?.error || err.message || 'Something went wrong',\n        timestamp: new Date().toLocaleTimeString()\n      };\n      \n      // Update chat history for the current tab\n      setChatHistories(prev => ({\n        ...prev,\n        [activeTab]: [...(prev[activeTab] || []), errorMessage]\n      }));\n    } finally {\n      setLoading(false);\n      setMessage('');\n    }\n  };\n\n  const clearChat = () => {\n    // Clear chat history for the current tab only\n    setChatHistories(prev => ({\n      ...prev,\n      [activeTab]: []\n    }));\n    setError(null);\n  };\n\n  return {\n    activeTab,\n    setActiveTab,\n    message,\n    setMessage,\n    chatHistory,\n    loading,\n    error,\n    handleSubmit,\n    clearChat\n  };\n};\n\nexport default useChat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}